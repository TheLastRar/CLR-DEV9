<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="TestApps|ARM">
      <Configuration>TestApps</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="TestApps|x64">
      <Configuration>TestApps</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="TestApps|x86">
      <Configuration>TestApps</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{5E6D369F-7F00-4C44-8BC1-1E72C905492B}</ProjectGuid>
    <Keyword>Linux</Keyword>
    <RootNamespace>CLR_DEV9_LINUX</RootNamespace>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <ApplicationType>Linux</ApplicationType>
    <ApplicationTypeRevision>1.0</ApplicationTypeRevision>
    <TargetLinuxPlatform>Generic</TargetLinuxPlatform>
    <LinuxProjectType>{2238F9CD-F817-4ECC-BD14-2524D2669B35}</LinuxProjectType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|ARM'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|x86'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|ARM'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|x64'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|x86'">
    <TargetExt>.so</TargetExt>
    <IncludePath>$(IncludePath);$(ISenseIncludePath);$(ProjectDir)external\usr\include;$(ProjectDir)external\usr\include\mono-2.0;$(ProjectDir)external\usr\include\x86_64-linux-gnu</IncludePath>
  </PropertyGroup>
  <ItemGroup>
    <ClCompile Include="DEV9.cpp" />
    <ClCompile Include="PSE.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="DEV9.h" />
    <ClInclude Include="PSE.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="BundleMono.sh" />
    <None Include="CLR_DEV9.dll">
      <DeploymentContent>false</DeploymentContent>
    </None>
  </ItemGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <Link>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalLibraryDirectories>/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>cp $(RemoteOutDir)$(TargetFileName) /usr/lib/i386-linux-gnu/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|ARM'">
    <Link>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalLibraryDirectories>/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>cp $(RemoteOutDir)$(TargetFileName) /usr/lib/i386-linux-gnu/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <Link>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalLibraryDirectories>/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>cp $(RemoteOutDir)$(TargetFileName) /usr/lib/i386-linux-gnu/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Link>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalLibraryDirectories>/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>tar -zcvf $(RemoteOutDir)$(TargetName).$(ConfigurationName).tar.gz -C $(RemoteOutDir) $(TargetFileName) &amp;&amp; cp $(RemoteTargetPath) /usr/lib/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
    </PreBuildEvent>
    <RemotePreLinkEvent>
      <Command>objcopy --input binary --output elf64-x86-64 --binary-architecture i386:x86-64 CLR_DEV9.dll $(RemoteProjectDir)/obj/CLR_DEV9.o</Command>
      <Message>Convert CLR_DEV9 to object file</Message>
    </RemotePreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|x64'">
    <Link>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalLibraryDirectories>/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>tar -zcvf $(RemoteOutDir)$(TargetName).$(ConfigurationName).tar.gz -C $(RemoteOutDir) $(TargetFileName) &amp;&amp; cp $(RemoteTargetPath) /usr/lib/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
    </PreBuildEvent>
    <RemotePreLinkEvent>
      <Command>objcopy --input binary --output elf64-x86-64 --binary-architecture i386:x86-64 CLR_DEV9.dll $(RemoteProjectDir)/obj/CLR_DEV9.o</Command>
      <Message>Convert CLR_DEV9 to object file</Message>
    </RemotePreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Link>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalLibraryDirectories>/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>tar -zcvf $(RemoteOutDir)$(TargetName).$(ConfigurationName).tar.gz -C $(RemoteOutDir) $(TargetFileName) &amp;&amp; cp $(RemoteTargetPath) /usr/lib/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
    </PreBuildEvent>
    <RemotePreLinkEvent>
      <Command>objcopy --input binary --output elf64-x86-64 --binary-architecture i386:x86-64 CLR_DEV9.dll $(RemoteProjectDir)/obj/CLR_DEV9.o</Command>
      <Message>Convert CLR_DEV9 to object file</Message>
    </RemotePreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <Link>
      <AdditionalOptions>-m32 -Wl,-rpath,"$"ORIGIN/mono_i386/usr/lib</AdditionalOptions>
      <AdditionalLibraryDirectories>mono_i386/usr/lib;/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalOptions>-m32</AdditionalOptions>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>tar -zcvf $(RemoteOutDir)$(TargetName).$(ConfigurationName).tar.gz mono_i386 -C $(RemoteOutDir) $(TargetFileName) &amp;&amp; cp $(RemoteTargetPath) /var/lib/flatpak/app/net.pcsx2.PCSX2/x86_64/stable/active/files/lib32/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
      <AdditionalSourcesToCopyMapping>BundleMono.sh</AdditionalSourcesToCopyMapping>
    </PreBuildEvent>
    <RemotePreLinkEvent>
      <Command>$(RemoteProjectDir)/BundleMono.sh $(RemoteProjectDir) | objcopy --input binary --output elf32-i386 --binary-architecture i386 CLR_DEV9.dll $(RemoteProjectDir)/obj/CLR_DEV9.o</Command>
      <Message>Download Mono, Convert CLR_DEV9 to object file</Message>
    </RemotePreLinkEvent>
    <RemotePreBuildEvent />
    <RemotePreBuildEvent />
    <RemotePreBuildEvent>
      <Command>chmod +x $(RemoteProjectDir)/BundleMono.sh</Command>
      <AdditionalSourcesToCopyMapping>
      </AdditionalSourcesToCopyMapping>
    </RemotePreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='TestApps|x86'">
    <Link>
      <AdditionalOptions>-m32 -Wl,-rpath,"$"ORIGIN/mono_i386/usr/lib</AdditionalOptions>
      <AdditionalLibraryDirectories>mono_i386/usr/lib;/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalOptions>-m32</AdditionalOptions>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>tar -zcvf $(RemoteOutDir)$(TargetName).$(ConfigurationName).tar.gz mono_i386 -C $(RemoteOutDir) $(TargetFileName) &amp;&amp; cp $(RemoteTargetPath) /var/lib/flatpak/app/net.pcsx2.PCSX2/x86_64/stable/active/files/lib32/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
      <AdditionalSourcesToCopyMapping>BundleMono.sh</AdditionalSourcesToCopyMapping>
    </PreBuildEvent>
    <RemotePreLinkEvent>
      <Command>$(RemoteProjectDir)/BundleMono.sh $(RemoteProjectDir) | objcopy --input binary --output elf32-i386 --binary-architecture i386 CLR_DEV9.dll $(RemoteProjectDir)/obj/CLR_DEV9.o</Command>
      <Message>Download Mono, Convert CLR_DEV9 to object file</Message>
    </RemotePreLinkEvent>
    <RemotePreBuildEvent />
    <RemotePreBuildEvent />
    <RemotePreBuildEvent>
      <Command>chmod +x $(RemoteProjectDir)/BundleMono.sh</Command>
      <AdditionalSourcesToCopyMapping>
      </AdditionalSourcesToCopyMapping>
    </RemotePreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <Link>
      <AdditionalOptions>-m32 -Wl,-rpath,"$"ORIGIN/mono_i386/usr/lib</AdditionalOptions>
      <AdditionalLibraryDirectories>mono_i386/usr/lib;/usr/lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>monosgen-2.0;m;rt;dl;pthread</LibraryDependencies>
      <AdditionalDependencies>$(RemoteProjectDir)/obj/CLR_DEV9.o;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ClCompile>
      <PositionIndependentCode>true</PositionIndependentCode>
      <AdditionalOptions>-m32</AdditionalOptions>
      <AdditionalIncludeDirectories>/usr/include/mono-2.0;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>tar -zcvf $(RemoteOutDir)$(TargetName).$(ConfigurationName).tar.gz mono_i386 -C $(RemoteOutDir) $(TargetFileName) &amp;&amp; cp $(RemoteTargetPath) /var/lib/flatpak/app/net.pcsx2.PCSX2/x86_64/stable/active/files/lib32/pcsx2/$(TargetFileName)</Command>
      <Message>Copy plugin to PCSX2 dir, Make sure to take ownership of directory</Message>
    </RemotePostBuildEvent>
    <PreBuildEvent>
      <Command>copy "$(SolutionDir)CLR_DEV9\bin\$(Configuration)\x86\CLR_DEV9.dll" "$(ProjectDir)CLR_DEV9.dll" /Y</Command>
      <AdditionalSourcesToCopyMapping>BundleMono.sh</AdditionalSourcesToCopyMapping>
    </PreBuildEvent>
    <RemotePreLinkEvent>
      <Command>$(RemoteProjectDir)/BundleMono.sh $(RemoteProjectDir) | objcopy --input binary --output elf32-i386 --binary-architecture i386 CLR_DEV9.dll $(RemoteProjectDir)/obj/CLR_DEV9.o</Command>
      <Message>Download Mono, Convert CLR_DEV9 to object file</Message>
    </RemotePreLinkEvent>
    <RemotePreBuildEvent />
    <RemotePreBuildEvent />
    <RemotePreBuildEvent>
      <Command>chmod +x $(RemoteProjectDir)/BundleMono.sh</Command>
      <AdditionalSourcesToCopyMapping>
      </AdditionalSourcesToCopyMapping>
    </RemotePreBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>